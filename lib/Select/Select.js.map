{"version":3,"sources":["../../src/Select/Select.js"],"names":["WrapperSelect","props","onClearValue","event","preventDefault","stopPropagation","resetField","onSelectValue","newValue","value","state","label","optionsMap","setState","valueLabel","onChange","closeOptions","onValueClick","onSelectFocused","openOptions","isFocused","setFocus","onSearching","focusedIndex","options","isOpened","setTimeout","filteredOptions","filter","opt","toLowerCase","term","inputInnerRef","indexOf","searchTerm","lastIndex","length","keyCode","reduce","agregate","current","hasOwnProperty","isSelected","v4","onClose","focus","target","tagName","onInputClear","placeholder","classes","valueRenderer","content","selectValue","selectValueLabel","selectPlaceholder","selectMultiValueWrapper","selectInput","selectInputField","n","onOpen","noResultsText","selectOptions","map","i","selectOption","e","selectMenuOuter","selectMenu","clearable","selectClearZone","selectClear","generatedClassName","selectNode","name","disabled","className","node","selectInnerRef","selectControl","renderSelectMultiValueWrapper","renderSelectClearZone","selectArrowZone","selectArrow","renderSelectMenuOuter","PureComponent","propTypes","any","array","func","bool","string","object","oneOfType","element","defaultProps"],"mappings":"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","file":"Select.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport enhanceWithClickOutside from 'react-click-outside'\nimport uuid from 'uuid';\n\nimport {\n  KEY_UP,\n  KEY_ESC,\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_BACKSPACE\n} from './constants'\n\nimport Select from './partials/Select'\nimport SelectMenu from './partials/SelectMenu'\nimport SelectValue from './partials/SelectValue'\nimport SelectClear from './partials/SelectClear'\nimport SelectArrow from './partials/SelectArrow'\nimport SelectInput from './partials/SelectInput'\nimport SelectInputField from './partials/SelectInputField'\nimport SelectOption from './partials/SelectOption'\nimport SelectControl from './partials/SelectControl'\nimport SelectNoResults from './partials/SelectNoResults'\nimport SelectClearZone from './partials/SelectClearZone'\nimport SelectArrowZone from './partials/SelectArrowZone'\nimport SelectMenuOuter from './partials/SelectMenuOuter'\nimport SelectPlaceholder from './partials/SelectPlaceholder'\nimport SelectMultiValueWrapper from './partials/SelectMultiValueWrapper'\n\nimport ValueRenderer from './renderers/ValueRenderer'\n\nimport stringifyValue from './functions/stringifyValue'\n\nclass WrapperSelect extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.optionsMap = props.options.reduce((agregate, current) => {\n      agregate[current.value] = current\n      return agregate\n    }, {})\n\n    let valueLabel = null\n    if (props.value && this.optionsMap.hasOwnProperty(props.value)) {\n      valueLabel = this.optionsMap[props.value].label\n    }\n\n    this.state = {\n      isOpened: false,\n      isFocused: false,\n      isSelected: false,\n      value: props.value,\n      valueLabel,\n      searchTerm: null,\n      focusedIndex: 0,\n      options: props.options,\n      'aria-owns': this.props['aria-owns'] || uuid.v4()\n    }\n\n    this.inputInnerRef = null\n  }\n\n  openOptions() {\n    this.setState({ isOpened: true });\n  }\n\n  closeOptions() {\n    this.setState({ isOpened: false });\n    this.props.onClose();\n  }\n\n  setFocus() {\n    setTimeout(() => {\n      this.inputInnerRef && this.inputInnerRef.focus();\n    }, 10);\n  }\n\n  // react-click-outside callback\n  handleClickOutside(event){\n    if (event.target.tagName === 'HTML' || event.target.tagName === 'DIV') {\n      if (this.state.isOpened) {\n        this.closeOptions()\n      }\n    }\n  }\n\n  resetField() {\n    this.setState({ value: null, searchTerm: null }, () => {\n      this.closeOptions()\n      this.inputInnerRef.value = ''\n      this.props.onInputClear()\n    })\n  }\n\n  onClearValue = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    this.resetField();\n  }\n\n  onSelectValue = (newValue, event) => {\n    const { value } = this.state;\n    const label = this.optionsMap[newValue].label;\n    if (value != newValue) {\n      this.setState({\n        value: newValue,\n        valueLabel: label\n      }, () => {\n        this.props.onChange(newValue);\n      })\n    }\n    this.closeOptions()\n    this.props.onValueClick(newValue, event);\n  }\n\n  onSelectFocused = () => {\n    this.openOptions();\n    this.setState({\n      isFocused: true\n    })\n    this.setFocus();\n  }\n\n  onSearching = (event) => {\n    const { focusedIndex, options, isOpened } = this.state;\n\n    setTimeout(() => {\n      const filteredOptions = this.props.options.filter((opt) => {\n        const label = opt.label.toLowerCase()\n        const term = this.inputInnerRef.value.toLowerCase()\n        return label.indexOf(term) !== -1\n      });\n      this.setState({ searchTerm: this.inputInnerRef.value, options: filteredOptions })\n    }, 1)\n\n    const lastIndex = (options.length - 1)\n    switch (event.keyCode) {\n      case KEY_BACKSPACE: // backspace\n        if (!this.inputInnerRef.value) {\n          this.resetField()\n        }\n      case KEY_UP:\n        this.setState({\n          focusedIndex: (focusedIndex <= 0 ? lastIndex : (focusedIndex - 1))\n        })\n        return;\n      case KEY_DOWN:\n        if (!isOpened) {\n          this.openOptions();\n          return;\n        }\n\n        this.setState({\n          focusedIndex: (focusedIndex >= lastIndex ? 0 : (focusedIndex + 1))\n        })\n        return;\n      case KEY_ENTER:\n        if (!options.length) return;\n        const newValue = options[focusedIndex].value\n        this.onSelectValue(newValue, event)\n        return;\n      case KEY_ESC:\n        this.closeOptions()\n    }\n  }\n\n  renderSelectMultiValueWrapper() {\n    const { placeholder, classes, valueRenderer } = this.props\n    const { value, isOpened, isSelected, valueLabel, searchTerm } = this.state\n\n    let content = '';\n\n    if (value && !searchTerm) {\n      content = (\n        <SelectValue className={classes.selectValue} data-select-value>\n          {valueRenderer({ value, label: valueLabel }, classes.selectValueLabel)}\n        </SelectValue>\n      );\n    }\n\n    if (!value && !searchTerm) {\n      content = (\n        <SelectPlaceholder\n          className={classes.selectPlaceholder}\n          data-select-placeholder>{placeholder}</SelectPlaceholder>\n      )\n    }\n\n    return (\n      <SelectMultiValueWrapper\n        className={classes.selectMultiValueWrapper}\n        data-select-multi-value-wrapper>\n        {content}\n        <SelectInput data-select-input className={classes.selectInput}>\n          <SelectInputField\n            className={classes.selectInputField}\n            data-select-input-search\n            onKeyDown={this.onSearching}\n            innerRef={(n) => this.inputInnerRef = n}\n            aria-label={placeholder}\n            aria-expanded={isOpened}\n            aria-owns={this.state['aria-owns']}\n            role=\"combobox\" type=\"text\" />\n        </SelectInput>\n      </SelectMultiValueWrapper>\n    );\n  }\n\n  renderSelectMenuOuter() {\n    const { onOpen, classes, noResultsText } = this.props;\n    const { value, isOpened, focusedIndex, options } = this.state;\n\n    if (!isOpened) {\n      return (\n        <div aria-hidden=\"true\" id={this.state['aria-owns']} role=\"listbox\">\n          <div role=\"option\" tabIndex=\"-1\" />\n        </div>\n      );\n    }\n\n    onOpen()\n\n    let selectOptions = <SelectNoResults>{noResultsText}</SelectNoResults>;\n\n    if (options.length > 0) {\n      selectOptions = options.map((opt, i) => (\n        <SelectOption\n          id={this.state['aria-owns']}\n          className={classes.selectOption}\n          key={i}\n          isSelected={value === opt.value}\n          aria-selected={value === opt.value}\n          tabIndex={value === opt.value ? '0' : '-1'}\n          isFocused={focusedIndex === i}\n          role=\"option\"\n          data-select-option={opt.value}\n          onMouseDown={(e) => this.onSelectValue(opt.value, e)}>\n          {opt.label}\n        </SelectOption>\n      ));\n    }\n    return (\n      <SelectMenuOuter\n        className={classes.selectMenuOuter}\n        data-select-menu-outer>\n        <SelectMenu\n          role=\"listbox\"\n          className={classes.selectMenu} data-select-menu>\n          {selectOptions}\n        </SelectMenu>\n      </SelectMenuOuter>\n    )\n  }\n\n  renderSelectClearZone() {\n    const { clearable, classes } = this.props;\n\n    if (!clearable) return;\n\n    return (\n      <SelectClearZone\n        className={classes.selectClearZone}\n        data-select-clear-zone onMouseDown={this.onClearValue}>\n        <SelectClear\n          className={classes.selectClear} data-select-clear>x</SelectClear>\n      </SelectClearZone>\n    );\n  }\n\n  componentDidMount() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  componentDidUpdate() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  render () {\n    const { name, disabled, className, classes } = this.props;\n    const { value, isSelected, isOpened } = this.state;\n    return (\n      <Select data-select className={className}\n        ref={(node) => this.selectNode = node} innerRef={(node) => this.selectInnerRef = node}>\n        <input type=\"hidden\" name={name} value={stringifyValue(value)} disabled={disabled} />\n        <SelectControl\n          isOpened={isOpened}\n          aria-haspopup={isOpened}\n          className={classes.selectControl}\n          data-select-control onMouseDown={this.onSelectFocused}>\n          {this.renderSelectMultiValueWrapper()}\n          {this.renderSelectClearZone()}\n          <SelectArrowZone\n            className={classes.selectArrowZone} data-select-arrow-zone>\n            <SelectArrow isOpened={isOpened} className={classes.selectArrow} data-select-arrow />\n          </SelectArrowZone>\n        </SelectControl>\n        {this.renderSelectMenuOuter()}\n      </Select>\n    )\n  }\n}\n\nWrapperSelect.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onChange: PropTypes.func,\n  onValueClick: PropTypes.func,\n  onInputClear: PropTypes.func,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  noResultsText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  generatedClassName: PropTypes.func\n}\n\nWrapperSelect.defaultProps = {\n  onClose: () => {},\n  onOpen: () => {},\n  onChange: () => {},\n  onValueClick: () => {},\n  onInputClear: () => {},\n  clearable: false,\n  options: [],\n  placeholder: 'Select...',\n  noResultsText: 'No results found',\n  classes: {\n    selectArrow: '',\n    selectArrowZone: '',\n    selectClear: '',\n    selectClearZone: '',\n    selectControl: '',\n    selectInput: '',\n    selectInputField: '',\n    selectMenu: '',\n    selectMenuOuter: '',\n    selectMultiValueWrapper: '',\n    selectOption: '',\n    selectPlaceholder: '',\n    selectValue: '',\n    selectValueLabel: ''\n  },\n  valueRenderer: ValueRenderer,\n  generatedClassName: () => {}\n}\n\nexport default enhanceWithClickOutside(WrapperSelect)\n"]}